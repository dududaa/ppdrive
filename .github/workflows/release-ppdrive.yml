name: Release PPDRIVE

on:
  push:
    tags:
      - "v*" # Trigger only on version tags like v1.0.0

permissions:
  contents: write

jobs:
  build:
    name: Build and Package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ppdrive-linux.tar.gz
            bin_ext:

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: ppdrive-windows.zip
            bin_ext: .exe

          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: ppdrive-macos.tar.gz
            bin_ext:

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        run: |
          cargo build --release --bin ppdrive --target ${{ matrix.target }}
          cargo build --release --bin manager --target ${{ matrix.target }}

      - name: Prepare Release Package
        run: |
          mkdir -p package

          cp target/${{ matrix.target }}/release/ppdrive${{ matrix.bin_ext }} package/
          cp target/${{ matrix.target }}/release/manager${{ matrix.bin_ext }} package/

          mkdir -p dist

          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            powershell -Command "Compress-Archive -Path package\\* -DestinationPath dist\\${{ matrix.artifact_name }}"
          else
            tar -czvf dist/${{ matrix.artifact_name }} -C package .
          fi
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*.tar.gz
            dist/**/*.zip
          prerelease: ${{ contains(github.ref, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
