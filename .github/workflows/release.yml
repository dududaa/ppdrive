name: Cross-compile & Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: docker.io
  DOCKER_USER: prodbyola 
  IMAGE_TAG: ${{ github.ref_name }}

permissions:
  contents: write 

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          # - x86_64-apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Update cross custom image
        run: |
          cd cross
          IMAGE_NAME=${DOCKER_USER}/cross-openssl:${IMAGE_TAG}

          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          cd ..

      - name: Pull cross image
        run: docker pull ${{ env.DOCKER_USER }}/cross-openssl:${{ env.IMAGE_TAG }}

      - name: Install cross
        run: cargo install cross

      - name: Build with cross
        run: cross build --release --target ${{ matrix.target }}
        env:
          CROSS_DOCKER_IMAGE: ${{ env.DOCKER_USER }}/cross-openssl:${{ env.IMAGE_TAG }}

      - name: Rename binary
        run: |
          BIN_NAME=ppdrive
          EXT=""
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then EXT=".exe"; fi
          mkdir -p dist
          cp target/${{ matrix.target }}/release/$BIN_NAME$EXT dist/${BIN_NAME}-${{ matrix.target }}$EXT

      - name: Upload Release Binary
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
